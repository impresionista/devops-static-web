---
- name: Set the ansible_python_interpreter fact
  hosts:
    - all
  tasks:
    - name: Set default python interpreter
      ansible.builtin.set_fact:
        ansible_python_interpreter: "/usr/bin/python3"

- name: Install docker and docker-compose on remote host
  hosts:
    - all
  become: true
  gather_facts: true
  tasks:
    - name: Install basic packages
      ansible.builtin.apt:
        name:
          - make
          - unzip
          - ca-certificates
          - gnupg
        state: present
        update_cache: true
    - name: Add docker repo key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add docker apt repository
      ansible.builtin.apt_repository:
        repo:
          "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_facts['distribution_release'] }} stable"
        state: present
    - name: Install docker and docker-compose
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true
    - name: Start docker service
      ansible.builtin.service:
        name: docker
        state: started
    - name: Add users to docker group
      ansible.builtin.user:
        name: ubuntu
        groups:
          - docker
        append: true

- name: Add web service user
  tags:
    - user-management
  hosts:
    - webserver
    - production
    - staging
  gather_facts: false
  become: true
  tasks:
    - name: Add user
      ansible.builtin.user:
        name: webservice
        shell: /usr/bin/bash
        append: true
        generate_ssh_key: true
        groups:
          - docker
        state: present
    - name: Add autorized key
      ansible.posix.authorized_key:
        user: webservice
        key: "{{ lookup('file', '{{ansible_ssh_key_file}}') }}"
        state: present

